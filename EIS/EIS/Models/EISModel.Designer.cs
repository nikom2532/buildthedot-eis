//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EISModel", "FK_BankType", "banktype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.BankType), "bankloanapproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.BankLoanApproval), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_BudgetType", "budgettype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.BudgetType), "budgetusage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.BudgetUsage), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.EmployeeRelatedBudgetType), "employeerelatedbudgetusage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.EmployeeRelatedBudgetUsage), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_EmployeeType", "employeetype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.EmployeeType), "numberofemployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.NumberOfEmployee), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_FundMemberType", "fundmembertype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.FundMemberType), "estimatedfundmember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.EstimatedFundMember), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_RetirementType", "retirementtype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.RetirementType), "estimatedretirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.EstimatedRetirement), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_FirstCarStatusType", "firstcarstatustype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.FirstCarStatusType), "firstcarstatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.FirstCarStatus), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_RetirementFundType", "retirementfundtype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.RetirementFundType), "retirementfundusage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.RetirementFundUsage), true)]
[assembly: EdmRelationshipAttribute("EISModel", "FK_WarrantFundProvider", "warrantfundprovider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EIS.Models.WarrantFundProvider), "warrantfundproviding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EIS.Models.WarrantFundProviding), true)]

#endregion

namespace EIS.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eisEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eisEntities object using the connection string found in the 'eisEntities' section of the application configuration file.
        /// </summary>
        public eisEntities() : base("name=eisEntities", "eisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eisEntities object.
        /// </summary>
        public eisEntities(string connectionString) : base(connectionString, "eisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eisEntities object.
        /// </summary>
        public eisEntities(EntityConnection connection) : base(connection, "eisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankLoanApproval> BankLoanApprovals1
        {
            get
            {
                if ((_BankLoanApprovals1 == null))
                {
                    _BankLoanApprovals1 = base.CreateObjectSet<BankLoanApproval>("BankLoanApprovals1");
                }
                return _BankLoanApprovals1;
            }
        }
        private ObjectSet<BankLoanApproval> _BankLoanApprovals1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankType> BankTypes1
        {
            get
            {
                if ((_BankTypes1 == null))
                {
                    _BankTypes1 = base.CreateObjectSet<BankType>("BankTypes1");
                }
                return _BankTypes1;
            }
        }
        private ObjectSet<BankType> _BankTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BudgetType> BudgetTypes1
        {
            get
            {
                if ((_BudgetTypes1 == null))
                {
                    _BudgetTypes1 = base.CreateObjectSet<BudgetType>("BudgetTypes1");
                }
                return _BudgetTypes1;
            }
        }
        private ObjectSet<BudgetType> _BudgetTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BudgetUsage> BudgetUsages1
        {
            get
            {
                if ((_BudgetUsages1 == null))
                {
                    _BudgetUsages1 = base.CreateObjectSet<BudgetUsage>("BudgetUsages1");
                }
                return _BudgetUsages1;
            }
        }
        private ObjectSet<BudgetUsage> _BudgetUsages1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeRelatedBudgetType> EmployeeRelatedBudgetTypes1
        {
            get
            {
                if ((_EmployeeRelatedBudgetTypes1 == null))
                {
                    _EmployeeRelatedBudgetTypes1 = base.CreateObjectSet<EmployeeRelatedBudgetType>("EmployeeRelatedBudgetTypes1");
                }
                return _EmployeeRelatedBudgetTypes1;
            }
        }
        private ObjectSet<EmployeeRelatedBudgetType> _EmployeeRelatedBudgetTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeRelatedBudgetUsage> EmployeeRelatedBudgetUsages1
        {
            get
            {
                if ((_EmployeeRelatedBudgetUsages1 == null))
                {
                    _EmployeeRelatedBudgetUsages1 = base.CreateObjectSet<EmployeeRelatedBudgetUsage>("EmployeeRelatedBudgetUsages1");
                }
                return _EmployeeRelatedBudgetUsages1;
            }
        }
        private ObjectSet<EmployeeRelatedBudgetUsage> _EmployeeRelatedBudgetUsages1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeType> EmployeeTypes1
        {
            get
            {
                if ((_EmployeeTypes1 == null))
                {
                    _EmployeeTypes1 = base.CreateObjectSet<EmployeeType>("EmployeeTypes1");
                }
                return _EmployeeTypes1;
            }
        }
        private ObjectSet<EmployeeType> _EmployeeTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EstimatedFundMember> EstimatedFundMembers1
        {
            get
            {
                if ((_EstimatedFundMembers1 == null))
                {
                    _EstimatedFundMembers1 = base.CreateObjectSet<EstimatedFundMember>("EstimatedFundMembers1");
                }
                return _EstimatedFundMembers1;
            }
        }
        private ObjectSet<EstimatedFundMember> _EstimatedFundMembers1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EstimatedRetirement> EstimatedRetirements1
        {
            get
            {
                if ((_EstimatedRetirements1 == null))
                {
                    _EstimatedRetirements1 = base.CreateObjectSet<EstimatedRetirement>("EstimatedRetirements1");
                }
                return _EstimatedRetirements1;
            }
        }
        private ObjectSet<EstimatedRetirement> _EstimatedRetirements1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirstCarStatus> FirstCarStatus
        {
            get
            {
                if ((_FirstCarStatus == null))
                {
                    _FirstCarStatus = base.CreateObjectSet<FirstCarStatus>("FirstCarStatus");
                }
                return _FirstCarStatus;
            }
        }
        private ObjectSet<FirstCarStatus> _FirstCarStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirstCarStatusType> FirstCarStatusTypes1
        {
            get
            {
                if ((_FirstCarStatusTypes1 == null))
                {
                    _FirstCarStatusTypes1 = base.CreateObjectSet<FirstCarStatusType>("FirstCarStatusTypes1");
                }
                return _FirstCarStatusTypes1;
            }
        }
        private ObjectSet<FirstCarStatusType> _FirstCarStatusTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundMemberType> FundMemberTypes
        {
            get
            {
                if ((_FundMemberTypes == null))
                {
                    _FundMemberTypes = base.CreateObjectSet<FundMemberType>("FundMemberTypes");
                }
                return _FundMemberTypes;
            }
        }
        private ObjectSet<FundMemberType> _FundMemberTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NumberOfEmployee> NumberOfEmployees1
        {
            get
            {
                if ((_NumberOfEmployees1 == null))
                {
                    _NumberOfEmployees1 = base.CreateObjectSet<NumberOfEmployee>("NumberOfEmployees1");
                }
                return _NumberOfEmployees1;
            }
        }
        private ObjectSet<NumberOfEmployee> _NumberOfEmployees1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetirementFundType> RetirementFundTypes1
        {
            get
            {
                if ((_RetirementFundTypes1 == null))
                {
                    _RetirementFundTypes1 = base.CreateObjectSet<RetirementFundType>("RetirementFundTypes1");
                }
                return _RetirementFundTypes1;
            }
        }
        private ObjectSet<RetirementFundType> _RetirementFundTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetirementFundUsage> RetirementFundUsages1
        {
            get
            {
                if ((_RetirementFundUsages1 == null))
                {
                    _RetirementFundUsages1 = base.CreateObjectSet<RetirementFundUsage>("RetirementFundUsages1");
                }
                return _RetirementFundUsages1;
            }
        }
        private ObjectSet<RetirementFundUsage> _RetirementFundUsages1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetirementType> RetirementTypes1
        {
            get
            {
                if ((_RetirementTypes1 == null))
                {
                    _RetirementTypes1 = base.CreateObjectSet<RetirementType>("RetirementTypes1");
                }
                return _RetirementTypes1;
            }
        }
        private ObjectSet<RetirementType> _RetirementTypes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarrantFundProvider> WarrantFundProviders
        {
            get
            {
                if ((_WarrantFundProviders == null))
                {
                    _WarrantFundProviders = base.CreateObjectSet<WarrantFundProvider>("WarrantFundProviders");
                }
                return _WarrantFundProviders;
            }
        }
        private ObjectSet<WarrantFundProvider> _WarrantFundProviders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarrantFundProviding> WarrantFundProvidings1
        {
            get
            {
                if ((_WarrantFundProvidings1 == null))
                {
                    _WarrantFundProvidings1 = base.CreateObjectSet<WarrantFundProviding>("WarrantFundProvidings1");
                }
                return _WarrantFundProvidings1;
            }
        }
        private ObjectSet<WarrantFundProviding> _WarrantFundProvidings1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvailableYear> AvailableYears1
        {
            get
            {
                if ((_AvailableYears1 == null))
                {
                    _AvailableYears1 = base.CreateObjectSet<AvailableYear>("AvailableYears1");
                }
                return _AvailableYears1;
            }
        }
        private ObjectSet<AvailableYear> _AvailableYears1;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankLoanApprovals1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankLoanApprovals1(BankLoanApproval bankLoanApproval)
        {
            base.AddObject("BankLoanApprovals1", bankLoanApproval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankTypes1(BankType bankType)
        {
            base.AddObject("BankTypes1", bankType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BudgetTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBudgetTypes1(BudgetType budgetType)
        {
            base.AddObject("BudgetTypes1", budgetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BudgetUsages1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBudgetUsages1(BudgetUsage budgetUsage)
        {
            base.AddObject("BudgetUsages1", budgetUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeRelatedBudgetTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeRelatedBudgetTypes1(EmployeeRelatedBudgetType employeeRelatedBudgetType)
        {
            base.AddObject("EmployeeRelatedBudgetTypes1", employeeRelatedBudgetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeRelatedBudgetUsages1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeRelatedBudgetUsages1(EmployeeRelatedBudgetUsage employeeRelatedBudgetUsage)
        {
            base.AddObject("EmployeeRelatedBudgetUsages1", employeeRelatedBudgetUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTypes1(EmployeeType employeeType)
        {
            base.AddObject("EmployeeTypes1", employeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EstimatedFundMembers1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEstimatedFundMembers1(EstimatedFundMember estimatedFundMember)
        {
            base.AddObject("EstimatedFundMembers1", estimatedFundMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EstimatedRetirements1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEstimatedRetirements1(EstimatedRetirement estimatedRetirement)
        {
            base.AddObject("EstimatedRetirements1", estimatedRetirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirstCarStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirstCarStatus(FirstCarStatus firstCarStatus)
        {
            base.AddObject("FirstCarStatus", firstCarStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirstCarStatusTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirstCarStatusTypes1(FirstCarStatusType firstCarStatusType)
        {
            base.AddObject("FirstCarStatusTypes1", firstCarStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundMemberTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundMemberTypes(FundMemberType fundMemberType)
        {
            base.AddObject("FundMemberTypes", fundMemberType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NumberOfEmployees1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNumberOfEmployees1(NumberOfEmployee numberOfEmployee)
        {
            base.AddObject("NumberOfEmployees1", numberOfEmployee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetirementFundTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetirementFundTypes1(RetirementFundType retirementFundType)
        {
            base.AddObject("RetirementFundTypes1", retirementFundType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetirementFundUsages1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetirementFundUsages1(RetirementFundUsage retirementFundUsage)
        {
            base.AddObject("RetirementFundUsages1", retirementFundUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetirementTypes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetirementTypes1(RetirementType retirementType)
        {
            base.AddObject("RetirementTypes1", retirementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarrantFundProviders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarrantFundProviders(WarrantFundProvider warrantFundProvider)
        {
            base.AddObject("WarrantFundProviders", warrantFundProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarrantFundProvidings1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarrantFundProvidings1(WarrantFundProviding warrantFundProviding)
        {
            base.AddObject("WarrantFundProvidings1", warrantFundProviding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvailableYears1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvailableYears1(AvailableYear availableYear)
        {
            base.AddObject("AvailableYears1", availableYear);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="AvailableYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvailableYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvailableYear object.
        /// </summary>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static AvailableYear CreateAvailableYear(global::System.Int32 year, global::System.DateTime createdDate)
        {
            AvailableYear availableYear = new AvailableYear();
            availableYear.Year = year;
            availableYear.CreatedDate = createdDate;
            return availableYear;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    OnYearChanging(value);
                    ReportPropertyChanging("Year");
                    _Year = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Year");
                    OnYearChanged();
                }
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="BankLoanApproval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankLoanApproval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankLoanApproval object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="bankTypeId">Initial value of the BankTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static BankLoanApproval CreateBankLoanApproval(global::System.Int32 id, global::System.Int32 year, global::System.Int32 bankTypeId, global::System.DateTime lastUpdated)
        {
            BankLoanApproval bankLoanApproval = new BankLoanApproval();
            bankLoanApproval.Id = id;
            bankLoanApproval.Year = year;
            bankLoanApproval.BankTypeId = bankTypeId;
            bankLoanApproval.LastUpdated = lastUpdated;
            return bankLoanApproval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankTypeId
        {
            get
            {
                return _BankTypeId;
            }
            set
            {
                OnBankTypeIdChanging(value);
                ReportPropertyChanging("BankTypeId");
                _BankTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankTypeId");
                OnBankTypeIdChanged();
            }
        }
        private global::System.Int32 _BankTypeId;
        partial void OnBankTypeIdChanging(global::System.Int32 value);
        partial void OnBankTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfPeople
        {
            get
            {
                return _NumberOfPeople;
            }
            set
            {
                OnNumberOfPeopleChanging(value);
                ReportPropertyChanging("NumberOfPeople");
                _NumberOfPeople = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfPeople");
                OnNumberOfPeopleChanged();
            }
        }
        private global::System.Int32 _NumberOfPeople = 0;
        partial void OnNumberOfPeopleChanging(global::System.Int32 value);
        partial void OnNumberOfPeopleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount = 0m;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_BankType", "banktype")]
        public BankType BankType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankType>("EISModel.FK_BankType", "banktype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankType>("EISModel.FK_BankType", "banktype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankType> BankTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankType>("EISModel.FK_BankType", "banktype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankType>("EISModel.FK_BankType", "banktype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="BankType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankType object.
        /// </summary>
        /// <param name="bankTypeId">Initial value of the BankTypeId property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        public static BankType CreateBankType(global::System.Int32 bankTypeId, global::System.String bankName)
        {
            BankType bankType = new BankType();
            bankType.BankTypeId = bankTypeId;
            bankType.BankName = bankName;
            return bankType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankTypeId
        {
            get
            {
                return _BankTypeId;
            }
            set
            {
                if (_BankTypeId != value)
                {
                    OnBankTypeIdChanging(value);
                    ReportPropertyChanging("BankTypeId");
                    _BankTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankTypeId");
                    OnBankTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BankTypeId;
        partial void OnBankTypeIdChanging(global::System.Int32 value);
        partial void OnBankTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="BudgetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BudgetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BudgetType object.
        /// </summary>
        /// <param name="budgetTypeId">Initial value of the BudgetTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static BudgetType CreateBudgetType(global::System.Int32 budgetTypeId, global::System.String typeName)
        {
            BudgetType budgetType = new BudgetType();
            budgetType.BudgetTypeId = budgetTypeId;
            budgetType.TypeName = typeName;
            return budgetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BudgetTypeId
        {
            get
            {
                return _BudgetTypeId;
            }
            set
            {
                if (_BudgetTypeId != value)
                {
                    OnBudgetTypeIdChanging(value);
                    ReportPropertyChanging("BudgetTypeId");
                    _BudgetTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BudgetTypeId");
                    OnBudgetTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BudgetTypeId;
        partial void OnBudgetTypeIdChanging(global::System.Int32 value);
        partial void OnBudgetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="BudgetUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BudgetUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BudgetUsage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="budgetTypeId">Initial value of the BudgetTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static BudgetUsage CreateBudgetUsage(global::System.Int32 id, global::System.Int32 year, global::System.Int32 budgetTypeId, global::System.DateTime lastUpdated)
        {
            BudgetUsage budgetUsage = new BudgetUsage();
            budgetUsage.Id = id;
            budgetUsage.Year = year;
            budgetUsage.BudgetTypeId = budgetTypeId;
            budgetUsage.LastUpdated = lastUpdated;
            return budgetUsage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BudgetTypeId
        {
            get
            {
                return _BudgetTypeId;
            }
            set
            {
                OnBudgetTypeIdChanging(value);
                ReportPropertyChanging("BudgetTypeId");
                _BudgetTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetTypeId");
                OnBudgetTypeIdChanged();
            }
        }
        private global::System.Int32 _BudgetTypeId;
        partial void OnBudgetTypeIdChanging(global::System.Int32 value);
        partial void OnBudgetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BudgetAmount
        {
            get
            {
                return _BudgetAmount;
            }
            set
            {
                OnBudgetAmountChanging(value);
                ReportPropertyChanging("BudgetAmount");
                _BudgetAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetAmount");
                OnBudgetAmountChanged();
            }
        }
        private global::System.Decimal _BudgetAmount = 0m;
        partial void OnBudgetAmountChanging(global::System.Decimal value);
        partial void OnBudgetAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Used
        {
            get
            {
                return _Used;
            }
            set
            {
                OnUsedChanging(value);
                ReportPropertyChanging("Used");
                _Used = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Used");
                OnUsedChanged();
            }
        }
        private global::System.Decimal _Used = 0m;
        partial void OnUsedChanging(global::System.Decimal value);
        partial void OnUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_BudgetType", "budgettype")]
        public BudgetType BudgetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BudgetType>("EISModel.FK_BudgetType", "budgettype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BudgetType>("EISModel.FK_BudgetType", "budgettype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BudgetType> BudgetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BudgetType>("EISModel.FK_BudgetType", "budgettype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BudgetType>("EISModel.FK_BudgetType", "budgettype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="EmployeeRelatedBudgetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeRelatedBudgetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeRelatedBudgetType object.
        /// </summary>
        /// <param name="employeeRelatedBudgetTypeId">Initial value of the EmployeeRelatedBudgetTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static EmployeeRelatedBudgetType CreateEmployeeRelatedBudgetType(global::System.Int32 employeeRelatedBudgetTypeId, global::System.String typeName)
        {
            EmployeeRelatedBudgetType employeeRelatedBudgetType = new EmployeeRelatedBudgetType();
            employeeRelatedBudgetType.EmployeeRelatedBudgetTypeId = employeeRelatedBudgetTypeId;
            employeeRelatedBudgetType.TypeName = typeName;
            return employeeRelatedBudgetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeRelatedBudgetTypeId
        {
            get
            {
                return _EmployeeRelatedBudgetTypeId;
            }
            set
            {
                if (_EmployeeRelatedBudgetTypeId != value)
                {
                    OnEmployeeRelatedBudgetTypeIdChanging(value);
                    ReportPropertyChanging("EmployeeRelatedBudgetTypeId");
                    _EmployeeRelatedBudgetTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeRelatedBudgetTypeId");
                    OnEmployeeRelatedBudgetTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeRelatedBudgetTypeId;
        partial void OnEmployeeRelatedBudgetTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeRelatedBudgetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="EmployeeRelatedBudgetUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeRelatedBudgetUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeRelatedBudgetUsage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="employeeRelatedBudgetTypeId">Initial value of the EmployeeRelatedBudgetTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static EmployeeRelatedBudgetUsage CreateEmployeeRelatedBudgetUsage(global::System.Int32 id, global::System.Int32 year, global::System.Int32 employeeRelatedBudgetTypeId, global::System.DateTime lastUpdated)
        {
            EmployeeRelatedBudgetUsage employeeRelatedBudgetUsage = new EmployeeRelatedBudgetUsage();
            employeeRelatedBudgetUsage.Id = id;
            employeeRelatedBudgetUsage.Year = year;
            employeeRelatedBudgetUsage.EmployeeRelatedBudgetTypeId = employeeRelatedBudgetTypeId;
            employeeRelatedBudgetUsage.LastUpdated = lastUpdated;
            return employeeRelatedBudgetUsage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeRelatedBudgetTypeId
        {
            get
            {
                return _EmployeeRelatedBudgetTypeId;
            }
            set
            {
                OnEmployeeRelatedBudgetTypeIdChanging(value);
                ReportPropertyChanging("EmployeeRelatedBudgetTypeId");
                _EmployeeRelatedBudgetTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeRelatedBudgetTypeId");
                OnEmployeeRelatedBudgetTypeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeRelatedBudgetTypeId;
        partial void OnEmployeeRelatedBudgetTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeRelatedBudgetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount = 0m;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype")]
        public EmployeeRelatedBudgetType EmployeeRelatedBudgetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRelatedBudgetType>("EISModel.FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRelatedBudgetType>("EISModel.FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeRelatedBudgetType> EmployeeRelatedBudgetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRelatedBudgetType>("EISModel.FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeRelatedBudgetType>("EISModel.FK_EmployeeRelatedBudgetType", "employeerelatedbudgettype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="EmployeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeType object.
        /// </summary>
        /// <param name="employeeTypeId">Initial value of the EmployeeTypeId property.</param>
        public static EmployeeType CreateEmployeeType(global::System.Int32 employeeTypeId)
        {
            EmployeeType employeeType = new EmployeeType();
            employeeType.EmployeeTypeId = employeeTypeId;
            return employeeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeTypeId
        {
            get
            {
                return _EmployeeTypeId;
            }
            set
            {
                if (_EmployeeTypeId != value)
                {
                    OnEmployeeTypeIdChanging(value);
                    ReportPropertyChanging("EmployeeTypeId");
                    _EmployeeTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeTypeId");
                    OnEmployeeTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeTypeId;
        partial void OnEmployeeTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="EstimatedFundMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EstimatedFundMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EstimatedFundMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="fundMemberTypeId">Initial value of the FundMemberTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static EstimatedFundMember CreateEstimatedFundMember(global::System.Int32 id, global::System.Int32 year, global::System.Int32 fundMemberTypeId, global::System.DateTime lastUpdated)
        {
            EstimatedFundMember estimatedFundMember = new EstimatedFundMember();
            estimatedFundMember.Id = id;
            estimatedFundMember.Year = year;
            estimatedFundMember.FundMemberTypeId = fundMemberTypeId;
            estimatedFundMember.LastUpdated = lastUpdated;
            return estimatedFundMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundMemberTypeId
        {
            get
            {
                return _FundMemberTypeId;
            }
            set
            {
                OnFundMemberTypeIdChanging(value);
                ReportPropertyChanging("FundMemberTypeId");
                _FundMemberTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundMemberTypeId");
                OnFundMemberTypeIdChanged();
            }
        }
        private global::System.Int32 _FundMemberTypeId;
        partial void OnFundMemberTypeIdChanging(global::System.Int32 value);
        partial void OnFundMemberTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private global::System.Int32 _EstimatedValue = 0;
        partial void OnEstimatedValueChanging(global::System.Int32 value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_FundMemberType", "fundmembertype")]
        public FundMemberType FundMemberType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundMemberType>("EISModel.FK_FundMemberType", "fundmembertype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundMemberType>("EISModel.FK_FundMemberType", "fundmembertype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundMemberType> FundMemberTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundMemberType>("EISModel.FK_FundMemberType", "fundmembertype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundMemberType>("EISModel.FK_FundMemberType", "fundmembertype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="EstimatedRetirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EstimatedRetirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EstimatedRetirement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="retirementTypeId">Initial value of the RetirementTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static EstimatedRetirement CreateEstimatedRetirement(global::System.Int32 id, global::System.Int32 year, global::System.Int32 retirementTypeId, global::System.DateTime lastUpdated)
        {
            EstimatedRetirement estimatedRetirement = new EstimatedRetirement();
            estimatedRetirement.Id = id;
            estimatedRetirement.Year = year;
            estimatedRetirement.RetirementTypeId = retirementTypeId;
            estimatedRetirement.LastUpdated = lastUpdated;
            return estimatedRetirement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetirementTypeId
        {
            get
            {
                return _RetirementTypeId;
            }
            set
            {
                OnRetirementTypeIdChanging(value);
                ReportPropertyChanging("RetirementTypeId");
                _RetirementTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetirementTypeId");
                OnRetirementTypeIdChanged();
            }
        }
        private global::System.Int32 _RetirementTypeId;
        partial void OnRetirementTypeIdChanging(global::System.Int32 value);
        partial void OnRetirementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedValue
        {
            get
            {
                return _EstimatedValue;
            }
            set
            {
                OnEstimatedValueChanging(value);
                ReportPropertyChanging("EstimatedValue");
                _EstimatedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedValue");
                OnEstimatedValueChanged();
            }
        }
        private global::System.Int32 _EstimatedValue = 0;
        partial void OnEstimatedValueChanging(global::System.Int32 value);
        partial void OnEstimatedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_RetirementType", "retirementtype")]
        public RetirementType RetirementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementType>("EISModel.FK_RetirementType", "retirementtype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementType>("EISModel.FK_RetirementType", "retirementtype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RetirementType> RetirementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementType>("EISModel.FK_RetirementType", "retirementtype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RetirementType>("EISModel.FK_RetirementType", "retirementtype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="FirstCarStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirstCarStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirstCarStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="statusTypeId">Initial value of the StatusTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static FirstCarStatus CreateFirstCarStatus(global::System.Int32 id, global::System.Int32 year, global::System.Int32 statusTypeId, global::System.DateTime lastUpdated)
        {
            FirstCarStatus firstCarStatus = new FirstCarStatus();
            firstCarStatus.Id = id;
            firstCarStatus.Year = year;
            firstCarStatus.StatusTypeId = statusTypeId;
            firstCarStatus.LastUpdated = lastUpdated;
            return firstCarStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private global::System.Int32 _StatusTypeId;
        partial void OnStatusTypeIdChanging(global::System.Int32 value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfPeople
        {
            get
            {
                return _NumberOfPeople;
            }
            set
            {
                OnNumberOfPeopleChanging(value);
                ReportPropertyChanging("NumberOfPeople");
                _NumberOfPeople = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfPeople");
                OnNumberOfPeopleChanged();
            }
        }
        private global::System.Int32 _NumberOfPeople = 0;
        partial void OnNumberOfPeopleChanging(global::System.Int32 value);
        partial void OnNumberOfPeopleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount = 0m;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_FirstCarStatusType", "firstcarstatustype")]
        public FirstCarStatusType FirstCarStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirstCarStatusType>("EISModel.FK_FirstCarStatusType", "firstcarstatustype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirstCarStatusType>("EISModel.FK_FirstCarStatusType", "firstcarstatustype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirstCarStatusType> FirstCarStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirstCarStatusType>("EISModel.FK_FirstCarStatusType", "firstcarstatustype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirstCarStatusType>("EISModel.FK_FirstCarStatusType", "firstcarstatustype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="FirstCarStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirstCarStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirstCarStatusType object.
        /// </summary>
        /// <param name="firstCarStatusTypeId">Initial value of the FirstCarStatusTypeId property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static FirstCarStatusType CreateFirstCarStatusType(global::System.Int32 firstCarStatusTypeId, global::System.String statusName)
        {
            FirstCarStatusType firstCarStatusType = new FirstCarStatusType();
            firstCarStatusType.FirstCarStatusTypeId = firstCarStatusTypeId;
            firstCarStatusType.StatusName = statusName;
            return firstCarStatusType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstCarStatusTypeId
        {
            get
            {
                return _FirstCarStatusTypeId;
            }
            set
            {
                if (_FirstCarStatusTypeId != value)
                {
                    OnFirstCarStatusTypeIdChanging(value);
                    ReportPropertyChanging("FirstCarStatusTypeId");
                    _FirstCarStatusTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FirstCarStatusTypeId");
                    OnFirstCarStatusTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FirstCarStatusTypeId;
        partial void OnFirstCarStatusTypeIdChanging(global::System.Int32 value);
        partial void OnFirstCarStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="FundMemberType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundMemberType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundMemberType object.
        /// </summary>
        /// <param name="fundMemberTypeId">Initial value of the FundMemberTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static FundMemberType CreateFundMemberType(global::System.Int32 fundMemberTypeId, global::System.String typeName)
        {
            FundMemberType fundMemberType = new FundMemberType();
            fundMemberType.FundMemberTypeId = fundMemberTypeId;
            fundMemberType.TypeName = typeName;
            return fundMemberType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundMemberTypeId
        {
            get
            {
                return _FundMemberTypeId;
            }
            set
            {
                if (_FundMemberTypeId != value)
                {
                    OnFundMemberTypeIdChanging(value);
                    ReportPropertyChanging("FundMemberTypeId");
                    _FundMemberTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundMemberTypeId");
                    OnFundMemberTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FundMemberTypeId;
        partial void OnFundMemberTypeIdChanging(global::System.Int32 value);
        partial void OnFundMemberTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="NumberOfEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NumberOfEmployee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NumberOfEmployee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="employeeTypeId">Initial value of the EmployeeTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static NumberOfEmployee CreateNumberOfEmployee(global::System.Int32 id, global::System.Int32 year, global::System.Int32 employeeTypeId, global::System.DateTime lastUpdated)
        {
            NumberOfEmployee numberOfEmployee = new NumberOfEmployee();
            numberOfEmployee.Id = id;
            numberOfEmployee.Year = year;
            numberOfEmployee.EmployeeTypeId = employeeTypeId;
            numberOfEmployee.LastUpdated = lastUpdated;
            return numberOfEmployee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeTypeId
        {
            get
            {
                return _EmployeeTypeId;
            }
            set
            {
                OnEmployeeTypeIdChanging(value);
                ReportPropertyChanging("EmployeeTypeId");
                _EmployeeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeTypeId");
                OnEmployeeTypeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeTypeId;
        partial void OnEmployeeTypeIdChanging(global::System.Int32 value);
        partial void OnEmployeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GovernmentOfficer
        {
            get
            {
                return _GovernmentOfficer;
            }
            set
            {
                OnGovernmentOfficerChanging(value);
                ReportPropertyChanging("GovernmentOfficer");
                _GovernmentOfficer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GovernmentOfficer");
                OnGovernmentOfficerChanged();
            }
        }
        private Nullable<global::System.Int32> _GovernmentOfficer = 0;
        partial void OnGovernmentOfficerChanging(Nullable<global::System.Int32> value);
        partial void OnGovernmentOfficerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PermanentContractor
        {
            get
            {
                return _PermanentContractor;
            }
            set
            {
                OnPermanentContractorChanging(value);
                ReportPropertyChanging("PermanentContractor");
                _PermanentContractor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermanentContractor");
                OnPermanentContractorChanged();
            }
        }
        private Nullable<global::System.Int32> _PermanentContractor = 0;
        partial void OnPermanentContractorChanging(Nullable<global::System.Int32> value);
        partial void OnPermanentContractorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GeneralOfficer
        {
            get
            {
                return _GeneralOfficer;
            }
            set
            {
                OnGeneralOfficerChanging(value);
                ReportPropertyChanging("GeneralOfficer");
                _GeneralOfficer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeneralOfficer");
                OnGeneralOfficerChanged();
            }
        }
        private Nullable<global::System.Int32> _GeneralOfficer = 0;
        partial void OnGeneralOfficerChanging(Nullable<global::System.Int32> value);
        partial void OnGeneralOfficerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_EmployeeType", "employeetype")]
        public EmployeeType EmployeeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("EISModel.FK_EmployeeType", "employeetype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("EISModel.FK_EmployeeType", "employeetype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeType> EmployeeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("EISModel.FK_EmployeeType", "employeetype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeType>("EISModel.FK_EmployeeType", "employeetype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="RetirementFundType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetirementFundType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetirementFundType object.
        /// </summary>
        /// <param name="retirementFundTypeId">Initial value of the RetirementFundTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static RetirementFundType CreateRetirementFundType(global::System.Int32 retirementFundTypeId, global::System.String typeName)
        {
            RetirementFundType retirementFundType = new RetirementFundType();
            retirementFundType.RetirementFundTypeId = retirementFundTypeId;
            retirementFundType.TypeName = typeName;
            return retirementFundType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetirementFundTypeId
        {
            get
            {
                return _RetirementFundTypeId;
            }
            set
            {
                if (_RetirementFundTypeId != value)
                {
                    OnRetirementFundTypeIdChanging(value);
                    ReportPropertyChanging("RetirementFundTypeId");
                    _RetirementFundTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RetirementFundTypeId");
                    OnRetirementFundTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RetirementFundTypeId;
        partial void OnRetirementFundTypeIdChanging(global::System.Int32 value);
        partial void OnRetirementFundTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="RetirementFundUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetirementFundUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetirementFundUsage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="retirementFundTypeId">Initial value of the RetirementFundTypeId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static RetirementFundUsage CreateRetirementFundUsage(global::System.Int32 id, global::System.Int32 year, global::System.Int32 retirementFundTypeId, global::System.DateTime lastUpdated)
        {
            RetirementFundUsage retirementFundUsage = new RetirementFundUsage();
            retirementFundUsage.Id = id;
            retirementFundUsage.Year = year;
            retirementFundUsage.RetirementFundTypeId = retirementFundTypeId;
            retirementFundUsage.LastUpdated = lastUpdated;
            return retirementFundUsage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetirementFundTypeId
        {
            get
            {
                return _RetirementFundTypeId;
            }
            set
            {
                OnRetirementFundTypeIdChanging(value);
                ReportPropertyChanging("RetirementFundTypeId");
                _RetirementFundTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetirementFundTypeId");
                OnRetirementFundTypeIdChanged();
            }
        }
        private global::System.Int32 _RetirementFundTypeId;
        partial void OnRetirementFundTypeIdChanging(global::System.Int32 value);
        partial void OnRetirementFundTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfPeople
        {
            get
            {
                return _NumberOfPeople;
            }
            set
            {
                OnNumberOfPeopleChanging(value);
                ReportPropertyChanging("NumberOfPeople");
                _NumberOfPeople = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfPeople");
                OnNumberOfPeopleChanged();
            }
        }
        private global::System.Int32 _NumberOfPeople = 0;
        partial void OnNumberOfPeopleChanging(global::System.Int32 value);
        partial void OnNumberOfPeopleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfUsage
        {
            get
            {
                return _NumberOfUsage;
            }
            set
            {
                OnNumberOfUsageChanging(value);
                ReportPropertyChanging("NumberOfUsage");
                _NumberOfUsage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUsage");
                OnNumberOfUsageChanged();
            }
        }
        private global::System.Decimal _NumberOfUsage = 0m;
        partial void OnNumberOfUsageChanging(global::System.Decimal value);
        partial void OnNumberOfUsageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_RetirementFundType", "retirementfundtype")]
        public RetirementFundType RetirementFundType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementFundType>("EISModel.FK_RetirementFundType", "retirementfundtype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementFundType>("EISModel.FK_RetirementFundType", "retirementfundtype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RetirementFundType> RetirementFundTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RetirementFundType>("EISModel.FK_RetirementFundType", "retirementfundtype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RetirementFundType>("EISModel.FK_RetirementFundType", "retirementfundtype", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="RetirementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetirementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetirementType object.
        /// </summary>
        /// <param name="retirementTypeId">Initial value of the RetirementTypeId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static RetirementType CreateRetirementType(global::System.Int32 retirementTypeId, global::System.String typeName)
        {
            RetirementType retirementType = new RetirementType();
            retirementType.RetirementTypeId = retirementTypeId;
            retirementType.TypeName = typeName;
            return retirementType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetirementTypeId
        {
            get
            {
                return _RetirementTypeId;
            }
            set
            {
                if (_RetirementTypeId != value)
                {
                    OnRetirementTypeIdChanging(value);
                    ReportPropertyChanging("RetirementTypeId");
                    _RetirementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RetirementTypeId");
                    OnRetirementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RetirementTypeId;
        partial void OnRetirementTypeIdChanging(global::System.Int32 value);
        partial void OnRetirementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="WarrantFundProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarrantFundProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarrantFundProvider object.
        /// </summary>
        /// <param name="warrantFundProviderId">Initial value of the WarrantFundProviderId property.</param>
        /// <param name="providerName">Initial value of the ProviderName property.</param>
        public static WarrantFundProvider CreateWarrantFundProvider(global::System.Int32 warrantFundProviderId, global::System.String providerName)
        {
            WarrantFundProvider warrantFundProvider = new WarrantFundProvider();
            warrantFundProvider.WarrantFundProviderId = warrantFundProviderId;
            warrantFundProvider.ProviderName = providerName;
            return warrantFundProvider;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarrantFundProviderId
        {
            get
            {
                return _WarrantFundProviderId;
            }
            set
            {
                if (_WarrantFundProviderId != value)
                {
                    OnWarrantFundProviderIdChanging(value);
                    ReportPropertyChanging("WarrantFundProviderId");
                    _WarrantFundProviderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarrantFundProviderId");
                    OnWarrantFundProviderIdChanged();
                }
            }
        }
        private global::System.Int32 _WarrantFundProviderId;
        partial void OnWarrantFundProviderIdChanging(global::System.Int32 value);
        partial void OnWarrantFundProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderName
        {
            get
            {
                return _ProviderName;
            }
            set
            {
                OnProviderNameChanging(value);
                ReportPropertyChanging("ProviderName");
                _ProviderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProviderName");
                OnProviderNameChanged();
            }
        }
        private global::System.String _ProviderName;
        partial void OnProviderNameChanging(global::System.String value);
        partial void OnProviderNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EISModel", Name="WarrantFundProviding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarrantFundProviding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarrantFundProviding object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="warrantFundProviderId">Initial value of the WarrantFundProviderId property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static WarrantFundProviding CreateWarrantFundProviding(global::System.Int32 id, global::System.Int32 year, global::System.Int32 warrantFundProviderId, global::System.DateTime lastUpdated)
        {
            WarrantFundProviding warrantFundProviding = new WarrantFundProviding();
            warrantFundProviding.Id = id;
            warrantFundProviding.Year = year;
            warrantFundProviding.WarrantFundProviderId = warrantFundProviderId;
            warrantFundProviding.LastUpdated = lastUpdated;
            return warrantFundProviding;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarrantFundProviderId
        {
            get
            {
                return _WarrantFundProviderId;
            }
            set
            {
                OnWarrantFundProviderIdChanging(value);
                ReportPropertyChanging("WarrantFundProviderId");
                _WarrantFundProviderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarrantFundProviderId");
                OnWarrantFundProviderIdChanged();
            }
        }
        private global::System.Int32 _WarrantFundProviderId;
        partial void OnWarrantFundProviderIdChanging(global::System.Int32 value);
        partial void OnWarrantFundProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfPeople
        {
            get
            {
                return _NumberOfPeople;
            }
            set
            {
                OnNumberOfPeopleChanging(value);
                ReportPropertyChanging("NumberOfPeople");
                _NumberOfPeople = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfPeople");
                OnNumberOfPeopleChanged();
            }
        }
        private global::System.Int32 _NumberOfPeople = 0;
        partial void OnNumberOfPeopleChanging(global::System.Int32 value);
        partial void OnNumberOfPeopleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount = 0m;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EISModel", "FK_WarrantFundProvider", "warrantfundprovider")]
        public WarrantFundProvider WarrantFundProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarrantFundProvider>("EISModel.FK_WarrantFundProvider", "warrantfundprovider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarrantFundProvider>("EISModel.FK_WarrantFundProvider", "warrantfundprovider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarrantFundProvider> WarrantFundProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarrantFundProvider>("EISModel.FK_WarrantFundProvider", "warrantfundprovider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarrantFundProvider>("EISModel.FK_WarrantFundProvider", "warrantfundprovider", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
